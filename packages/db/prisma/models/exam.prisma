model Exam {
  id         String       @id @default(uuid())
  name       String
  type       ExamType
  examDate   DateTime
  maxMarks   Float        @default(100)
  semesterId String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  results    ExamResult[]
  semester   Semester     @relation(fields: [semesterId], references: [id])

  @@map("exams")
}

model ExamResult {
  id                 String       @id @default(uuid())
  totalMarksObtained Float?
  percentage         Float?
  status             ResultStatus
  remarks            String?
  grade              Float?
  studentId          String
  examId             String
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  exam               Exam         @relation(fields: [examId], references: [id])
  student            User         @relation("examResults", fields: [studentId], references: [id])
  grades             Grade?

  @@unique([studentId, examId])
  @@map("exam_results")
}

model Grade {
  id            String     @id @default(uuid())
  marksObtained Float
  examResultId  String     @unique
  subjectId     String     @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  examResult    ExamResult @relation(fields: [examResultId], references: [id])
  subject       Subject    @relation(fields: [subjectId], references: [id])

  @@map("grades")
}

enum ExamType {
  MID_TERM
  FINAL_EXAM
  QUIZ
  PRACTICAL
}

enum ResultStatus {
  PASS
  FAIL
  PENDING
  WITHHELD
}
