model Payment {
    id                String         @id @default(uuid())
    user              User           @relation(fields: [userId], references: [id])
    userId            String
    type              PaymentType
    course            Course?        @relation(fields: [courseId], references: [id])
    courseId          String?
    hostel            Hostel?        @relation(fields: [hostelId], references: [id])
    hostelId          String?
    amount            Float
    currency          String         @default("INR")
    method            PaymentMethod  @default(MANUAL)
    status            PaymentStatus  @default(PENDING)
    reference         String?        // internal reference or receipt number
    gatewayOrderId    String?
    gatewayPaymentId  String?
    gatewaySignature  String?
    notes             String?
    
    // Verification fields
    verifiedBy        User?          @relation("VerifiedPayments", fields: [verifiedById], references: [id])
    verifiedById      String?
    verifiedAt        DateTime?
    verificationNotes String?
    rejectionReason   String?
    
    receipts          Receipt[]
    createdAt         DateTime       @default(now())
    updatedAt         DateTime       @updatedAt
    @@map("payments")
}

model Receipt {
  id           String   @id @default(uuid())
  paymentId    String
  mediaUrl     String
  mediaType    String
  uploadedById String
  notes        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  payment      Payment  @relation(fields: [paymentId], references: [id])
  uploadedBy   User     @relation(fields: [uploadedById], references: [id])

  @@map("receipts")
}

enum PaymentType {
    COURSE
    HOSTEL
    LIBRARY
    MISC
    SUMMERQUARTER
}

enum PaymentStatus {
    PENDING
    VERIFIED
    REJECTED
    FAILED
}

enum PaymentMethod {
    MANUAL
    RAZORPAY
    CARD
    UPI
}
