model User {
    id              String              @id @default(uuid())
    name            String
    email           String              @unique
    role            UserRole            @default(USER)
    joinedAt        DateTime            @default(now())
    coursesOpted    Course[]            @relation("UserCourses")
    hostelOpted     Hostel?             @relation("UserHostel", fields: [hostelId], references: [id])
    hostelId        String?
    coursePayStatus CoursePaymentStatus @default(NOT_VERIFIED)
    hostelPayStatus HostelPaymentStatus @default(NOT_VERIFIED)
    userStatus      UserStatus          @default(NOT_VERIFIED)
    university      University          @relation(fields: [universityId], references: [id])
    universityId    String              @unique
    application     Application?        @relation("userApplication", fields: [applicationId], references: [id])
    applicationId   String?

    verifiedApplications Application[] @relation("VerifiedApplications")
    verifiedDocuments    Document[]    @relation("VerifiedDocuments")

    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    Application Application?
    ExamResult  ExamResult[]

    @@map("users")
}

enum UserRole {
    USER
    STUDENT
    PROFESSOR
    ADMIN
    VERIFIER // New role for manual verification
}

enum CoursePaymentStatus {
    VERIFIED
    NOT_VERIFIED
}

enum HostelPaymentStatus {
    VERIFIED
    NOT_VERIFIED
}

enum UserStatus {
    VERIFIED
    NOT_VERIFIED
}
